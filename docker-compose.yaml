services:
  musicarr-postgres:
    image: postgres:latest
    container_name: musicarr-postgres
    environment:
      POSTGRES_DB: musicarr
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: mysecretpassword
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - musicarr-network
    restart: unless-stopped

  musicarr-frontend:
    container_name: musicarr-frontend
    build:
      context: ./frontend
      target: production
      dockerfile: Dockerfile
    # ports:
    #     - "3000:3000"
    networks:
      - musicarr-network
    depends_on:
      - musicarr-postgres
    restart: unless-stopped

  musicarr-backend:
    privileged: true
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - musicarr_storage:/musicarr/Storage
    environment:
      DATABASE_URL: postgresql+asyncpg://postgres:mysecretpassword@musicarr-postgres:5432/musicarr
      DATABASE_URL_FOR_ALEMBIC: postgresql://postgres:mysecretpassword@musicarr-postgres:5432/musicarr
    container_name: musicarr-backend
    # ports:
    #     - "5001:80"
    # expose:
    #   - "80"
    networks:
      - musicarr-network
    depends_on:
      - musicarr-postgres
    restart: no

  nginx:
    image: nginx
    container_name: musicarr-nginx
    ports:
      - "30200:80" # Change the desired port here <your_port>:80
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - musicarr-network
    depends_on:
      - musicarr-postgres
      - musicarr-frontend
      - musicarr-backend

networks:
  musicarr-network:
    driver: bridge

volumes:
  postgres_data:
  musicarr_storage: